{"ast":null,"code":"import _objectSpread from \"/Users/phoebe/homework/obdesign/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nconst Product = (state = [], action) => {\n  switch (action.type) {\n    case 'BUY_PRODUCT':\n      return {\n        id: action.id,\n        product: _objectSpread({}, action.product),\n        quantity: action.quantity\n      };\n\n    case 'NOBUY_PRODUCT':\n      return Object.assign([], state).filter(state => {\n        return state.id !== action.id;\n      });\n\n    case 'CHANGENUM_PRODUCT':\n      if (state.id !== action.id) return state;\n      return Object.assign({}, state, {\n        quantity: action.quantity\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst ShopCar = (state = [], action) => {\n  switch (action.type) {\n    case 'BUY_PRODUCT':\n      console.log('state', state);\n      console.log('action', action);\n\n      if (state.map(t => {\n        return t.product.id;\n      }).indexOf(action.product.id) >= 0) {\n        alert(\"此商品已加入購物車\");\n        return state;\n      } else return [...state, {\n        id: action.id,\n        product: _objectSpread({}, action.product),\n        quantity: action.quantity\n      }];\n\n    case 'NOBUY_PRODUCT':\n      return state.filter(state => state.id !== action.id);\n\n    case 'CHANGENUM_PRODUCT':\n      return state.map(odddata => {\n        if (odddata.id !== action.id) return odddata;\n        return _objectSpread({}, odddata, {\n          quantity: action.quantity\n        });\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default ShopCar;","map":{"version":3,"sources":["/Users/phoebe/homework/obdesign/src/reducer/ShopCar.js"],"names":["Product","state","action","type","id","product","quantity","Object","assign","filter","ShopCar","console","log","map","t","indexOf","alert","odddata"],"mappings":";;AAAA,MAAMA,OAAO,GAAG,CAACC,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAqB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAM;AACFC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADT;AAEFC,QAAAA,OAAO,oBAAMH,MAAM,CAACG,OAAb,CAFL;AAGFC,QAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAHf,OAAN;;AAKJ,SAAK,eAAL;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBQ,MAAzB,CAAgCR,KAAK,IAAE;AAC1C,eAAOA,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAA3B;AACH,OAFM,CAAP;;AAGJ,SAAK,mBAAL;AACI,UAAGH,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAAvB,EACI,OAAOH,KAAP;AACJ,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,KAAjB,EAAuB;AAC1BK,QAAAA,QAAQ,EAAEJ,MAAM,CAACI;AADS,OAAvB,CAAP;;AAGJ;AACI,aAAOL,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,MAAMS,OAAO,GAAG,CAACT,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAqB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBX,KAApB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBV,MAArB;;AACA,UAAGD,KAAK,CAACY,GAAN,CAAUC,CAAC,IAAI;AAAC,eAAOA,CAAC,CAACT,OAAF,CAAUD,EAAjB;AAAoB,OAApC,EAAsCW,OAAtC,CAA8Cb,MAAM,CAACG,OAAP,CAAeD,EAA7D,KAAoE,CAAvE,EAAyE;AACrEY,QAAAA,KAAK,CAAC,WAAD,CAAL;AACA,eAAOf,KAAP;AACH,OAHD,MAKI,OAAO,CACH,GAAGA,KADA,EAEH;AACIG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADf;AAEIC,QAAAA,OAAO,oBAAMH,MAAM,CAACG,OAAb,CAFX;AAGIC,QAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAHrB,OAFG,CAAP;;AAQR,SAAK,eAAL;AACI,aAAOL,KAAK,CAACQ,MAAN,CAAaR,KAAK,IAAIA,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAA1C,CAAP;;AACJ,SAAK,mBAAL;AACI,aAAOH,KAAK,CAACY,GAAN,CAAUI,OAAO,IAAE;AACtB,YAAGA,OAAO,CAACb,EAAR,KAAeF,MAAM,CAACE,EAAzB,EACI,OAAOa,OAAP;AACJ,iCAAWA,OAAX;AAAoBX,UAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAArC;AACH,OAJM,CAAP;;AAKJ;AACI,aAAOL,KAAP;AA1BR;AA4BH,CA7BD;;AA+BA,eAAeS,OAAf","sourcesContent":["const Product = (state=[],action) => {\n    switch (action.type){\n        case 'BUY_PRODUCT':\n            return{\n                id: action.id,\n                product: {...action.product},\n                quantity: action.quantity\n            };\n        case 'NOBUY_PRODUCT':\n            return Object.assign([], state).filter(state=>{\n                return state.id !== action.id\n            })\n        case 'CHANGENUM_PRODUCT':\n            if(state.id !== action.id)\n                return state;\n            return Object.assign({},state,{\n                quantity: action.quantity\n            })\n        default:\n            return state;\n    }\n}\n\nconst ShopCar = (state=[],action) => {\n    switch (action.type){\n        case 'BUY_PRODUCT':\n            console.log('state',state);\n            console.log('action',action);\n            if(state.map(t => {return t.product.id}).indexOf(action.product.id) >= 0){\n                alert(\"此商品已加入購物車\");\n                return state;\n            }\n            else\n                return [\n                    ...state,\n                    {\n                        id: action.id,\n                        product: {...action.product},\n                        quantity: action.quantity\n                    }\n                ];\n        case 'NOBUY_PRODUCT':\n            return state.filter(state => state.id !== action.id);\n        case 'CHANGENUM_PRODUCT':\n            return state.map(odddata=>{\n                if(odddata.id !== action.id)\n                    return odddata;\n                return {...odddata, quantity: action.quantity}\n            });\n        default:\n            return state;\n    }\n}\n\nexport default ShopCar;"]},"metadata":{},"sourceType":"module"}