{"ast":null,"code":"import _objectSpread from \"/Users/phoebe/homework/obdesign/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { getCart_DATA } from '../action/ShopCar';\nconst initialState = {\n  getCartDate: []\n}; // const ShopCar = (state=initialState,action) => {\n//     switch (action.type){\n//         case getCart_DATA:\n//             return { ...state,getCartDate: action.data };\n//         default:\n//             return state;\n//     }\n// }\n\nconst Product = (state = [], action) => {\n  switch (action.type) {\n    case 'BUY_PRODUCT':\n      return {\n        id: action.id,\n        product: _objectSpread({}, action.product),\n        quantity: action.quantity\n      };\n\n    case 'NOBUY_PRODUCT':\n      return Object.assign([], state).filter(state => {\n        return state.id !== action.id;\n      });\n\n    case 'CHANGENUM_PRODUCT':\n      if (state.id !== action.id) return state;\n      return Object.assign({}, state, {\n        quantity: action.quantity\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst ShopCar = (state = [], action) => {\n  switch (action.type) {\n    case 'BUY_PRODUCT':\n      if (state.map(t => {\n        return t.product.id;\n      }).indexOf(action.product.id) >= 0) {\n        alert(\"此商品已加入購物車\");\n        return state;\n      } else return [...state, Product(state, action)];\n\n    case 'NOBUY_PRODUCT':\n      return Product(state, action);\n\n    case 'CHANGENUM_PRODUCT':\n      return state.map(t => Product(t, action));\n\n    default:\n      return state;\n  }\n};\n\nexport default ShopCar;","map":{"version":3,"sources":["/Users/phoebe/homework/obdesign/src/reducer/ShopCar.js"],"names":["getCart_DATA","initialState","getCartDate","Product","state","action","type","id","product","quantity","Object","assign","filter","ShopCar","map","t","indexOf","alert"],"mappings":";AAAA,SAAQA,YAAR,QAA2B,mBAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAqB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAM;AACFC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADT;AAEFC,QAAAA,OAAO,oBAAMH,MAAM,CAACG,OAAb,CAFL;AAGFC,QAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAHf,OAAN;;AAKJ,SAAK,eAAL;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBQ,MAAzB,CAAgCR,KAAK,IAAE;AAC1C,eAAOA,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAA3B;AACH,OAFM,CAAP;;AAGJ,SAAK,mBAAL;AACI,UAAGH,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAAvB,EACI,OAAOH,KAAP;AACJ,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,KAAjB,EAAuB;AAC1BK,QAAAA,QAAQ,EAAEJ,MAAM,CAACI;AADS,OAAvB,CAAP;;AAGJ;AACI,aAAOL,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,MAAMS,OAAO,GAAG,CAACT,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAqB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,UAAGF,KAAK,CAACU,GAAN,CAAUC,CAAC,IAAI;AAAC,eAAOA,CAAC,CAACP,OAAF,CAAUD,EAAjB;AAAoB,OAApC,EAAsCS,OAAtC,CAA8CX,MAAM,CAACG,OAAP,CAAeD,EAA7D,KAAoE,CAAvE,EAAyE;AACrEU,QAAAA,KAAK,CAAC,WAAD,CAAL;AACA,eAAOb,KAAP;AACH,OAHD,MAKI,OAAO,CACH,GAAGA,KADA,EAEHD,OAAO,CAACC,KAAD,EAAOC,MAAP,CAFJ,CAAP;;AAIR,SAAK,eAAL;AACI,aAAOF,OAAO,CAACC,KAAD,EAAOC,MAAP,CAAd;;AACJ,SAAK,mBAAL;AACI,aAAOD,KAAK,CAACU,GAAN,CAAUC,CAAC,IAAEZ,OAAO,CAACY,CAAD,EAAGV,MAAH,CAApB,CAAP;;AACJ;AACI,aAAOD,KAAP;AAhBR;AAkBH,CAnBD;;AAqBA,eAAeS,OAAf","sourcesContent":["import {getCart_DATA} from '../action/ShopCar'\n\nconst initialState = {\n    getCartDate: [],\n};\n// const ShopCar = (state=initialState,action) => {\n//     switch (action.type){\n//         case getCart_DATA:\n//             return { ...state,getCartDate: action.data };\n//         default:\n//             return state;\n//     }\n// }\n\nconst Product = (state=[],action) => {\n    switch (action.type){\n        case 'BUY_PRODUCT':\n            return{\n                id: action.id,\n                product: {...action.product},\n                quantity: action.quantity\n            };\n        case 'NOBUY_PRODUCT':\n            return Object.assign([], state).filter(state=>{\n                return state.id !== action.id\n            })\n        case 'CHANGENUM_PRODUCT':\n            if(state.id !== action.id)\n                return state;\n            return Object.assign({},state,{\n                quantity: action.quantity\n            })\n        default:\n            return state;\n    }\n}\n\nconst ShopCar = (state=[],action) => {\n    switch (action.type){\n        case 'BUY_PRODUCT':\n            if(state.map(t => {return t.product.id}).indexOf(action.product.id) >= 0){\n                alert(\"此商品已加入購物車\");\n                return state;\n            }\n            else\n                return [\n                    ...state,\n                    Product(state,action)\n                ];\n        case 'NOBUY_PRODUCT':\n            return Product(state,action);\n        case 'CHANGENUM_PRODUCT':\n            return state.map(t=>Product(t,action));\n        default:\n            return state;\n    }\n}\n\nexport default ShopCar;"]},"metadata":{},"sourceType":"module"}