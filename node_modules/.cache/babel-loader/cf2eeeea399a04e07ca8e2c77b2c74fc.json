{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setAPIHost = setAPIHost;\nexports.setToken = setToken;\nexports.setStorage = setStorage;\nexports.default = exports.requestListener = exports.EVENT_REQUEST_FAILED = exports.EVENT_REQUEST_SUCCESSED = exports.EVENT_REQUESTED = exports.API_FINISHED = exports.API_REQUEST_SENT = exports.NO_TOKEN_STORED = exports.API_REQUEST = exports.SimpleStorage = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _events = require(\"events\");\n/* global API_HOST:false */\n\n\nvar HOST = '/api';\n\nvar SimpleStorage =\n/*#__PURE__*/\nfunction () {\n  function SimpleStorage() {\n    (0, _classCallCheck2.default)(this, SimpleStorage);\n  }\n\n  (0, _createClass2.default)(SimpleStorage, [{\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this[key];\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      this[key] = value;\n    }\n  }]);\n  return SimpleStorage;\n}();\n\nexports.SimpleStorage = SimpleStorage;\nvar storage;\n\nif (typeof localStorage !== 'undefined') {\n  storage = localStorage;\n} else {\n  storage = new SimpleStorage();\n}\n\nif (typeof API_HOST !== 'undefined') {\n  HOST = API_HOST;\n}\n\nvar API_REQUEST = 'REDUX_MIDDLEWARE_FETCH/API_REQUEST';\nexports.API_REQUEST = API_REQUEST;\nvar NO_TOKEN_STORED = 'REDUX_MIDDLEWARE_FETCH/NO_TOKEN_STORED';\nexports.NO_TOKEN_STORED = NO_TOKEN_STORED;\nvar API_REQUEST_SENT = 'REDUX_MIDDLEWARE_FETCH/API_REQUEST_SENT';\nexports.API_REQUEST_SENT = API_REQUEST_SENT;\nvar API_FINISHED = 'REDUX_MIDDLEWARE_FETCH/API_FINISHED';\nexports.API_FINISHED = API_FINISHED;\n\nfunction setAPIHost(API_HOST) {\n  HOST = API_HOST;\n}\n\nfunction setToken(token) {\n  storage.setItem('accessToken', token);\n}\n\nfunction setStorage(customStorage) {\n  storage = customStorage;\n}\n\nvar EVENT_REQUESTED = 'EVENT/REQUESTED';\nexports.EVENT_REQUESTED = EVENT_REQUESTED;\nvar EVENT_REQUEST_SUCCESSED = 'EVENT/REQUEST_SUCCESSED';\nexports.EVENT_REQUEST_SUCCESSED = EVENT_REQUEST_SUCCESSED;\nvar EVENT_REQUEST_FAILED = 'EVENT/REQUEST_FAILED';\nexports.EVENT_REQUEST_FAILED = EVENT_REQUEST_FAILED;\nvar requestListener = new _events.EventEmitter();\nexports.requestListener = requestListener;\n\nvar _default = function _default() {\n  return function (next) {\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref = (0, _asyncToGenerator2.default)(\n        /*#__PURE__*/\n        _regenerator.default.mark(function _callee(action) {\n          var requestOptions, entrypoint, types, auth, json, body, formData, method, onSuccess, onFailed, urlEncoded, fqdn, headers, dispatchPayload, customHeaders, _types, successType, errorType, requestType, fetchOptions, token, response;\n\n          return _regenerator.default.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  requestOptions = action[API_REQUEST];\n\n                  if (!(typeof requestOptions === 'undefined')) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", next(action));\n\n                case 3:\n                  entrypoint = requestOptions.entrypoint, types = requestOptions.types, auth = requestOptions.auth, json = requestOptions.json, body = requestOptions.body, formData = requestOptions.formData, method = requestOptions.method, onSuccess = requestOptions.onSuccess, onFailed = requestOptions.onFailed, urlEncoded = requestOptions.urlEncoded, fqdn = requestOptions.fqdn, headers = requestOptions.headers;\n                  dispatchPayload = _lodash.default.omit(requestOptions.dispatchPayload || {}, 'type');\n                  customHeaders = headers || {};\n                  _types = (0, _slicedToArray2.default)(types, 3), successType = _types[0], errorType = _types[1], requestType = _types[2]; // Fetch Endpoint\n\n                  fetchOptions = {\n                    method: method || 'GET',\n                    headers: (0, _objectSpread2.default)({\n                      Accept: 'application/json'\n                    }, customHeaders)\n                  }; // Inject JWT Token\n\n                  if (auth) {\n                    token = storage.getItem('accessToken');\n\n                    if (token) {\n                      fetchOptions.headers.Authorization = token;\n                    }\n                  } // ContentType\n\n\n                  if (json) {\n                    fetchOptions.headers['Content-Type'] = 'application/json';\n                    fetchOptions.body = JSON.stringify(body || {});\n                  } // x-www-form-urlencoded\n\n\n                  if (urlEncoded) {\n                    fetchOptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n                    fetchOptions.body = _qs.default.stringify(body || {});\n                  } // FormData\n\n\n                  if (formData) {\n                    fetchOptions.body = new FormData();\n\n                    _lodash.default.forEach(body, function (val, key) {\n                      if (val) {\n                        if (val instanceof FileList) {\n                          [].forEach.call(val, function (file) {\n                            return fetchOptions.body.append(key, file);\n                          });\n                        } else {\n                          fetchOptions.body.append(key, val);\n                        }\n                      }\n                    });\n                  }\n\n                  _context.prev = 12; // Before Request\n\n                  if (requestType) {\n                    next({\n                      type: requestType,\n                      entrypoint: entrypoint,\n                      fetchOptions: fetchOptions\n                    });\n                  } // Request Animation Start\n\n\n                  next({\n                    type: API_REQUEST_SENT\n                  });\n                  requestListener.emit(EVENT_REQUESTED, requestOptions);\n                  _context.next = 18;\n                  return fetch(\"\".concat(fqdn || HOST).concat(entrypoint), fetchOptions);\n\n                case 18:\n                  response = _context.sent; // Request Animation End\n\n                  next({\n                    type: API_FINISHED\n                  });\n\n                  if (!response.ok) {\n                    _context.next = 31;\n                    break;\n                  }\n\n                  requestListener.emit(EVENT_REQUEST_SUCCESSED, response);\n\n                  if (!(response.status === 204)) {\n                    _context.next = 26;\n                    break;\n                  }\n\n                  response = {};\n                  _context.next = 29;\n                  break;\n\n                case 26:\n                  _context.next = 28;\n                  return response.json();\n\n                case 28:\n                  response = _context.sent;\n\n                case 29:\n                  _context.next = 38;\n                  break;\n\n                case 31:\n                  requestListener.emit(EVENT_REQUEST_FAILED, response);\n                  _context.next = 34;\n                  return response.json();\n\n                case 34:\n                  response = _context.sent;\n                  next((0, _objectSpread2.default)({\n                    type: errorType,\n                    error: response.message\n                  }, response));\n\n                  if (onFailed) {\n                    onFailed(response.message);\n                  }\n\n                  return _context.abrupt(\"return\", true);\n\n                case 38:\n                  _context.next = 48;\n                  break;\n\n                case 40:\n                  _context.prev = 40;\n                  _context.t0 = _context[\"catch\"](12);\n\n                  if (!errorType) {\n                    _context.next = 46;\n                    break;\n                  }\n\n                  next({\n                    type: errorType,\n                    error: _context.t0\n                  });\n\n                  if (onFailed) {\n                    onFailed(_context.t0);\n                  }\n\n                  return _context.abrupt(\"return\", true);\n\n                case 46:\n                  if (onFailed) {\n                    onFailed(_context.t0);\n                  }\n\n                  return _context.abrupt(\"return\", console.error(_context.t0));\n\n                case 48:\n                  if (!_lodash.default.isArray(response)) {\n                    _context.next = 52;\n                    break;\n                  }\n\n                  next((0, _objectSpread2.default)({\n                    type: successType,\n                    list: response\n                  }, dispatchPayload));\n\n                  if (onSuccess) {\n                    onSuccess(response);\n                  }\n\n                  return _context.abrupt(\"return\", true);\n\n                case 52:\n                  if (onSuccess) {\n                    onSuccess(response);\n                  }\n\n                  return _context.abrupt(\"return\", next((0, _objectSpread2.default)({}, dispatchPayload, response, {\n                    _type: response.type,\n                    type: successType\n                  })));\n\n                case 54:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[12, 40]]);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    );\n  };\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}