{"ast":null,"code":"import _objectSpread from \"/Users/phoebe/homework/obdesign/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { BUY_PRODUCT, UPDATE_CART, DELETE_CART } from '../action/ShopCar'; //定義state的初始值\n\nconst initialState = {\n  cartDate: []\n}; //看接收到誰的action.type，就去處理他的資料\n\nconst ShopCar = (state = initialState, action) => {\n  switch (action.type) {\n    case BUY_PRODUCT:\n      const existing = state.cartDate.find(val => val.name === action.data.name);\n\n      if (existing) {\n        return _objectSpread({}, state, {\n          cartDate: state.cartDate.map(val => {\n            if (val.name === action.data.name) {\n              return _objectSpread({}, val, {\n                quantity: val.quantity + 1\n              });\n            }\n\n            return _objectSpread({}, val);\n          })\n        });\n      }\n\n      return _objectSpread({}, state, {\n        cartDate: [...state.cartDate, action.data]\n      });\n\n    case UPDATE_CART:\n      return _objectSpread({}, state, {\n        cartDate: state.cartDate.map(val => {\n          if (val.name === action.data.name) {\n            return _objectSpread({}, action.data);\n          }\n\n          return _objectSpread({}, val);\n        })\n      });\n\n    case DELETE_CART:\n      return _objectSpread({}, state, {\n        cartDate: state.cartDate.filter(val => {\n          return val.name !== action.data.name;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default ShopCar;","map":{"version":3,"sources":["/Users/phoebe/homework/obdesign/src/reducer/ShopCar.js"],"names":["BUY_PRODUCT","UPDATE_CART","DELETE_CART","initialState","cartDate","ShopCar","state","action","type","existing","find","val","name","data","map","quantity","filter"],"mappings":";AAAA,SACIA,WADJ,EAEIC,WAFJ,EAGIC,WAHJ,QAIO,mBAJP,C,CAMA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB,C,CAIA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACH,YAAP,EAAoBI,MAApB,KAA+B;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAL;AACI,YAAMS,QAAQ,GAAGH,KAAK,CAACF,QAAN,CAAeM,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,KAAaL,MAAM,CAACM,IAAP,CAAYD,IAApD,CAAjB;;AACA,UAAGH,QAAH,EAAa;AACT,iCACOH,KADP;AAEIF,UAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeU,GAAf,CAAmBH,GAAG,IAAG;AAC3B,gBAAIA,GAAG,CAACC,IAAJ,KAAaL,MAAM,CAACM,IAAP,CAAYD,IAA7B,EAAmC;AAC/B,uCACGD,GADH;AAEAI,gBAAAA,QAAQ,EAAEJ,GAAG,CAACI,QAAJ,GAAe;AAFzB;AAIH;;AACD,qCACOJ,GADP;AAGP,WAVS;AAFd;AAcH;;AACD,+BACOL,KADP;AAEIF,QAAAA,QAAQ,EAAE,CACN,GAAGE,KAAK,CAACF,QADH,EAENG,MAAM,CAACM,IAFD;AAFd;;AAOJ,SAAKZ,WAAL;AACI,+BACOK,KADP;AAEIF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeU,GAAf,CAAmBH,GAAG,IAAG;AAC/B,cAAIA,GAAG,CAACC,IAAJ,KAAaL,MAAM,CAACM,IAAP,CAAYD,IAA7B,EAAmC;AAC/B,qCACOL,MAAM,CAACM,IADd;AAGH;;AACD,mCACOF,GADP;AAGH,SATS;AAFd;;AAaJ,SAAKT,WAAL;AACI,+BACOI,KADP;AAEIF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeY,MAAf,CAAsBL,GAAG,IAAI;AACnC,iBAAOA,GAAG,CAACC,IAAJ,KAAaL,MAAM,CAACM,IAAP,CAAYD,IAAhC;AACH,SAFS;AAFd;;AAMJ;AACI,aAAON,KAAP;AAhDR;AAkDH,CAnDD;;AAqDA,eAAeD,OAAf","sourcesContent":["import {\n    BUY_PRODUCT,\n    UPDATE_CART,\n    DELETE_CART,\n} from '../action/ShopCar'\n\n//定義state的初始值\nconst initialState = {\n    cartDate: [],\n};\n\n//看接收到誰的action.type，就去處理他的資料\nconst ShopCar = (state=initialState,action) => {\n    switch (action.type){\n        case BUY_PRODUCT:\n            const existing = state.cartDate.find(val => val.name === action.data.name);\n            if(existing) {\n                return { \n                    ...state,\n                    cartDate: state.cartDate.map(val=> {\n                            if (val.name === action.data.name) {\n                                return {\n                                ...val,\n                                quantity: val.quantity + 1,\n                                }\n                            }\n                            return {\n                                ...val,\n                            }\n                    }),\n                };\n            }\n            return { \n                ...state,\n                cartDate: [\n                    ...state.cartDate,\n                    action.data,\n                ],\n            };\n        case UPDATE_CART: \n            return { \n                ...state,\n                cartDate: state.cartDate.map(val=> {\n                    if (val.name === action.data.name) {\n                        return {\n                            ...action.data,\n                        }   \n                    }\n                    return {\n                        ...val,\n                    }   \n                }),\n            };\n        case DELETE_CART: \n            return {\n                ...state,\n                cartDate: state.cartDate.filter(val => {\n                    return val.name !== action.data.name;\n                }),\n            };  \n        default:\n            return state;\n    }\n}\n\nexport default ShopCar;"]},"metadata":{},"sourceType":"module"}